server.address=0.0.0.0
server.port=8081

#run create tables scripts during the application startup
spring.flyway.enabled=false
spring.flyway.locations=classpath:db/h2

#jdbc
kogito.persistence.type=jdbc
# spring.datasource.url=jdbc:postgresql://localhost:5432/kogitonew
# spring.datasource.username=postgres
# spring.datasource.password=cpEP@123

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

# events
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


kogito.addon.cloudevents.kafka.kogito_incoming_stream=start
kogito.addon.cloudevents.kafka.kogito_incoming_stream.intermediate=intermediate
kogito.addon.cloudevents.kafka.kogito_outgoing_stream=end
kogito.addon.cloudevents.kafka.kogito_outgoing_stream.outgoing=outgoing

spring.kafka.consumer.group-id=intermediate

mp.messaging.incoming.kogito_incoming_stream.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.kogito_incoming_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# mp.messaging.incoming.kogito_incoming_stream.intermediate.key.serializer=org.apache.kafka.common.serialization.StringSerializer
# mp.messaging.incoming.kogito_incoming_stream.intermediate.value.serializer=org.apache.kafka.common.serialization.StringSerializer

